#!/bin/sh

!! case ${BUILD_YN_CONFIRM_NOBUILDWARNING} in '') echo IyBUaGlzIGZpbGUgaXMgZ2VuZXJhdGVkIGJ5IHBwLiBkbyBub3QgZWRpdC4KIyBzb3VyY2UgaXMgYW52YWxpYmxlIGF0OiAuL3NyYy9ZTl9jb25maXJtLnNo | base64 -d; esac # built file warning

YN_confirm() {

!! cat ./_help-detection.sh

	if [ -w "/dev/tty" ]; then
		io_file=/dev/tty
	else
		# busybox-w32 does not have /dev/tty, but custom `tty` command could return "CON"
		# dont detect if can write to the file, CON file does not exist (`test -e CON -a -w CON` will fail)
		# but read/write to it is the same as read/write to /dev/tty on Linux OS
		io_file=$(tty) || return
	fi

	unset print_response
	while case $# in 0) false;; *) ;;esac; do
		case $1 in
			--print-response) print_response='';;
			--stdin) unset io_file;;
			[+-]x) set "$1";;
			-*) printf %s\\n "YN_confirm: unrecognized option: '$1'" >&2; return 4;;
			*) break;;
		esac
		shift
	done


	default=${1-}
	${1+shift}

	local yn_prompt;yn_prompt='[y/n]'
	case $default in
		[Yy]|[Yy]es|YES) yn_prompt='[Y/n]';;
		[Nn]|[Nn]o|NO)   yn_prompt='[y/N]';;
		''|[Mm]aybe) ;;
		*) printf %s\\n >&2 "YN_confirm: warning, bad [default] argument '$default'"; return 4;;
	esac

IFS=${NEW_LINE-'
'}
	case ${io_file+x} in
		x) printf %s "${*-}${@:+ }$yn_prompt " >"$io_file";;
		*) printf %s "${*-}${@:+ }$yn_prompt " >&2;;
	esac

	# todo: integrate this exit status
	unset response
	case ${io_file+x} in
		x) read response <"$io_file";;
		*) read response;;
	esac || {
		case ${print_response+${response+x}} in x) printf %s "$response"; esac
		case $default in
			[Yy]es|[Nn]o|[Mm]aybe|??*) return 0;;
			*) return 5;;
		esac
	}
	case ${print_response+${response+x}} in x) printf %s\\n "$response"; esac



	case $response in
		[Yy]*) return 0;;
		[Nn]*) return 1;;
		'')
			case $default in
				[Yy]*) return 0;;
				[Nn]*) return 1;;
				*) return 2;;
			esac
		;;
		*)
			case $default in
				Y|N|M|Yes|No|Maybe|[A-Z]*) return 0;;
				*) return 3;;
			esac
		;;
	esac
}

case "${0##*/}" in
	YN_confirm|YN_confirm[!A-Za-z0-9_]*) YN_confirm "$@";;
	*) ;; # when file was sourced by shell, just load the function
esac



#""" # bat -r23:38 /usr/share/yash/initialization/common
#  23   │   history()
#  24   │   if [ -t 0 ] && (
#  25   │     for arg do
#  26   │       case "${arg}" in
#  27   │         (-[drsw]?* | --*=*) ;;
#  28   │         (-*c*) exit;;
#  29   │       esac
#  30   │     done
#  31   │     false
#  32   │   ) then
#  33   │     printf 'history: seems you are trying to clear the whole history.\n' >&2
#  34   │     printf 'are you sure? (yes/no) ' >&2
#  35   │     case "$(head -n 1)" in
#  36   │       ([Yy]*) command history "$@";;
#  37   │       (*)     printf 'history: cancelled.\n' >&2;;
#  38   │     esac
#

